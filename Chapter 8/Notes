## Notes of chapter 8 


Relational algebra is a procedural query language, which takes instances of relations as input and yields instances of relations as output. It uses operators to perform queries

The fundamental operations of relational algebra are as follows -

Select(unary opeator) >> The SELECT operation is used to choose a subset of the tuples from a relation that satisfies a selection condition

Project (unary opeator) >> The PROJECT operation, on the other hand, selects certain columns from the table and discards the other columns
 The PROJECT operation removes any duplicate tuples, so the result of the PROJECT operation is a set of distinct tuples

Union 

Set different

Cartesian product

Rename >> Rename is a unary operation used for renaming attributes of a relation.

JOIN >> Binary Relational Operations
DIVISION >> Binary Relational Operations






Relational Calculus is a non-procedural query language, that is, it tells what to do but never explains how to do it.

Relational calculus exists in two forms -

Tuple Relational Calculus (TRC) >> Tuple relational calculus is used for selecting those tuples that satisfy the given condition. descriped using set and conditions come after ( | ) anad before it come what i want to select
ex > { t | Student(t) AND t.Last_Name = 'Singh' }


Domain Relational Calculus (DRC) >>  domain relational calculus the records are filtered based on the domains
ex > {< First_Name, Age > | ∈ Student ∧ Age > 27}

Domain calculus differs from tuple calculus in the type of variables used in formulas: Rather than having variables range over tuples, the variables range over single
values from domains of attributes.



 aggregate functions 
1) Count()
2) Sum()
3) Avg()
4) Min()
5) Max()

Domain Relational Calculus (DRC)
